<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Calculations on Learning Julia</title><link>https://nick4f42.github.io/julia-intro-course/calculations/</link><description>Recent content in Calculations on Learning Julia</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://nick4f42.github.io/julia-intro-course/calculations/index.xml" rel="self" type="application/rss+xml"/><item><title>Arithmetic</title><link>https://nick4f42.github.io/julia-intro-course/calculations/arithmetic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nick4f42.github.io/julia-intro-course/calculations/arithmetic/</guid><description>Using Julia as a Calculator Julia supports all of the arithmetic operators you would expect to find on a calculator:
addition: + subtraction: - multiplication: * division: / exponentiation: ^ Go ahead and try using these operators in the REPL. The result of these calculations is displayed on the next line.
julia&amp;gt; 2 + 2 4 julia&amp;gt; 5 - 3 2 julia&amp;gt; 5 * 6 30 julia&amp;gt; 5 / 2 2.</description></item><item><title>Variables</title><link>https://nick4f42.github.io/julia-intro-course/calculations/variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nick4f42.github.io/julia-intro-course/calculations/variables/</guid><description>Assigning Variables Often times you want to store the results of calculations for later use. Instead of writing down numbers and typing them out again, you can assign a variable with = (the assignment operator).
julia&amp;gt; x = sqrt(2) 1.4142135623730951 Now, you can use x in place of 1.4142135623730951 in your future calculations.
julia&amp;gt; x + 1 2.414213562373095 You can also reassign x to another value if you change your mind:</description></item><item><title>Functions</title><link>https://nick4f42.github.io/julia-intro-course/calculations/functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nick4f42.github.io/julia-intro-course/calculations/functions/</guid><description>Assignment-Style Functions In the same sense that variables can help you use the same value multiple times, functions can help you use the same expression multiple times. Say you&amp;rsquo;re working with the following quadratic polynomial:
\[f(x) = 3x^2 - 5x &amp;#43; 6\] The = operator can assign an expression to a function. In this case, we want f(x) to represent the expression 3x^2 - 5x + 6:
julia&amp;gt; f(x) = 3x^2 - 5x + 6 f (generic function with 1 method) The x inside this function is not accessible from outside.</description></item><item><title>Errors</title><link>https://nick4f42.github.io/julia-intro-course/calculations/errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nick4f42.github.io/julia-intro-course/calculations/errors/</guid><description>When Julia cannot understand or run a command, you will get an error. Being a good programmer is more about knowing how to interpret errors than never getting them. Let&amp;rsquo;s go through a couple basic errors you might get when typing in the REPL.
Syntax Errors Extra Space Syntax errors occur when Julia can&amp;rsquo;t understand your code. You might get one if you accidentally type a space where you shouldn&amp;rsquo;t:</description></item><item><title>Patterns</title><link>https://nick4f42.github.io/julia-intro-course/calculations/patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nick4f42.github.io/julia-intro-course/calculations/patterns/</guid><description>Assigning Variables Consider the following assignment:
julia&amp;gt; a = 4 4 The = operator can actually do bit more than assigning a value to a variable. You can actually thing of the left side as a pattern that is matching the right side.
A variable name is a pattern that matches anything, including tuples for example.
julia&amp;gt; b = (1, 2) (1, 2) julia&amp;gt; b (1, 2) What if we want to assign values in a tuple to separate variables?</description></item></channel></rss>